// <auto-generated />
using System;
//using Backend.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    //[DbContext(typeof(MembershipcardContext))]
    partial class MembershipcardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Backend.Data.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("Date_of_birth");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Sex")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("CUSTOMER", (string)null);
                });

            modelBuilder.Entity("Backend.Data.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int")
                        .HasColumnName("Material_ID");

                    b.Property<string>("Cncmill")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CNCMill");

                    b.Property<string>("Filament")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LaserCutter")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PremiumFilament")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Resin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MaterialId");

                    b.ToTable("MATERIAL", (string)null);
                });

            modelBuilder.Entity("Backend.Data.Models.Membership", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("Computers")
                        .HasColumnType("bit");

                    b.Property<bool?>("CrealityPrinters")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Customer_ID");

                    b.Property<bool?>("Electronics")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("Expiration_Date");

                    b.Property<bool?>("Lcdprinters")
                        .HasColumnType("bit")
                        .HasColumnName("LCDPrinters");

                    b.Property<bool?>("Raise3D")
                        .HasColumnType("bit");

                    b.Property<string>("Subscription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Tools")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("MEMBERSHIP", (string)null);
                });

            modelBuilder.Entity("CustomerMaterial", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Customer_ID");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int")
                        .HasColumnName("Material_ID");

                    b.HasKey("CustomerId", "MaterialId")
                        .HasName("PK__CUSTOMER__4F121DB65D928B2E");

                    b.HasIndex("MaterialId");

                    b.ToTable("CUSTOMER_MATERIAL", (string)null);
                });

            modelBuilder.Entity("Backend.Data.Models.Membership", b =>
                {
                    b.HasOne("Backend.Data.Models.Customer", "Customer")
                        .WithMany("Memberships")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__MEMBERSHI__Custo__267ABA7A");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerMaterial", b =>
                {
                    b.HasOne("Backend.Data.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__CUSTOMER___Custo__2B3F6F97");

                    b.HasOne("Backend.Data.Models.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .IsRequired()
                        .HasConstraintName("FK__CUSTOMER___Mater__2C3393D0");
                });

            modelBuilder.Entity("Backend.Data.Models.Customer", b =>
                {
                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
